apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka-1
    app.kubernetes.io/version: "3.11-alpine"
    app.kubernetes.io/component: message-broker
    app.kubernetes.io/part-of: tre-acque
    app.kubernetes.io/managed-by: Kubernetes
spec:
  serviceName: kafka
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: kafka-1
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: kafka-1
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: kafka
          image: bitnami/kafka:3.3.1-debian-11-r29
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9092
              protocol: TCP
          env:
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: broker,controller
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:9093
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: 1@localhost:9093
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_NUM_PARTITIONS
              value: "6"
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - name: kafka-volume
              mountPath: /bitnami/kafka
          resources:
            limits:
              cpu: 0.5
              memory: 1Gi
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 45
            timeoutSeconds: 2
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
#          livenessProbe:
#            exec:
#              command:
#                - /bin/bash
#                - -ec
#                - kafka-diagnostics -q ping
#            initialDelaySeconds: 120
#            timeoutSeconds: 20
#            periodSeconds: 30
#            failureThreshold: 6
#            successThreshold: 1
#          readinessProbe:
#            exec:
#              command:
#                - /bin/bash
#                - -ec
#                - kafka-diagnostics -q check_running && kafka-diagnostics -q check_local_alarms
#            initialDelaySeconds: 10
#            timeoutSeconds: 20
#            periodSeconds: 30
#            failureThreshold: 3
#            successThreshold: 1
      volumes:
        - name: kafka-volume
          persistentVolumeClaim:
            claimName: kafka
