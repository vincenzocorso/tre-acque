version: "3.9"
services:
  kafka:
    image: bitnami/kafka:3.3.1-debian-11-r29
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: 6
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app-net

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:3.27.0
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    networks:
      - app-net

  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - ./fountain-service/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-net
    restart: unless-stopped

  redis:
    image: redis:7.0.7
    ports:
      - "6379:6379"
    networks:
      - app-net
    restart: unless-stopped

  fountain-service:
    depends_on:
      - postgres
      - kafka
    build:
      context: ./fountain-service
      dockerfile: ./Dockerfile
    image: tre-acque/fountain-service
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: app
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      KAFKA_HOST: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - app-net
    restart: unless-stopped

  notification-service:
    depends_on:
      - kafka
      - redis
    build:
      context: ./notification-service
      dockerfile: ./Dockerfile
    image: tre-acque/notification-service
    environment:
      - KAFKA_HOST=kafka:9092
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - MAILGUN_FROM=chiodi637@gmail.com
      - MAILGUN_DOMAIN=sandbox1f4606329c4042d4ae5b239a0ea811e8.mailgun.org
      - MAILGUN_API_KEY=myapikey
    ports:
      - "8081:3000"

  arangodb:
    image: arangodb:3.10
    environment:
      ARANGO_NO_AUTH: 1
    ports:
      - "8529:8529"
    networks:
      - app-net
    restart: on-failure

  rating-service:
    restart: on-failure
    depends_on:
      - arangodb
      - kafka
    build:
      context: ./rating-service
      dockerfile: ./Dockerfile
    image: tre-acque/rating-service
    environment:
      ARANGODB_URL: tcp://arangodb:8529
      ARANGODB_DB: ratingsdb
      KAFKA_URL: kafka:9092
      KAFKA_GROUPID: rating-service
      KAFKA_TOPIC: fountain_events
      SERVER_PORT: 8080
    ports:
      - "8083:8080"
    networks:
      - app-net

networks:
  app-net:
