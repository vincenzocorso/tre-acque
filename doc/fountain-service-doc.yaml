openapi: 3.0.3

info:
  title: Tre Acque
  description: TODO To insert
  contact:
    name: Tre Acque
    url: https://gitlab.com/tre-acque
    email: v.corso3@campus.unimib.it
  license:
    name: AGPL
    url: https://gitlab.com/tre-acque/tre-acque/LICENSE.md
  version: "1"

servers:
  - url: http://localhost:8080
  - url: http://localhost:8081

tags:
  - name: fountain-service
    description: TODO description of fountain service...
  - name: notification-service
    description: TODO description of notification service...
  - name: rating-service
    description: TODO description of notification servite...

paths:
  /fountains:
    get:
      tags:
        - fountain-service
      description: Gets all the fountains
      parameters:
        - name: area
          description: The optinal search area
          in: query
          required: false
          schema:
            type: object
            required:
              - latitude
              - longitude
            properties:
              latitude:
                type: number
                format: double
              longitude:
                type: number
                format: double
              radius:
                type: number
                format: double
                default: 500.0
          examples:
            with radius:
              value:
                latitude: 543.13
                longitude: 654.123
                radius: 340.50
            without radius:
              value:
                latitude: 543.13
                longitude: 654.123
      responses:
        200:
          description: The list of fountains was successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FountainResponse"
    post:
      tags:
        - fountain-service
      description: Add a new fountain
      requestBody:
        description: The fountain details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - latitude
                - longitude
              properties:
                name:
                  type: string
                latitude:
                  type: number
                  format: double
                longitude:
                  type: number
                  format: double
              example:
                name: Fontana Via Armando Diaz
                latitude: 345.91341
                longitude: 315.9123
      responses:
        201:
          description: The fountain was successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FountainResponse"
        400:
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "VALIDATION_ERROR"
                message: "There was an error during the validation of the request"
                issues:
                  - "The latitude of the fountain must be present"
                  - "The longitude of the fountain must be present"

  /fountains/{fountainId}:
    parameters:
      - name: fountainId
        description: the fountain id
        in: path
        required: true
        schema:
          type: string
        example: 1
    get:
      tags:
        - fountain-service
      description: Get the fountain with the given id
      responses:
        200:
          description: The fountain was successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FountainResponse"
        404:
          description: The fountain with the given id was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "NOT_FOUND_ERROR"
                message: "The entity with the given id (1) was not found"
                issues: []
    delete:
      tags:
        - fountain-service
      description: Delete the fountain with the given id
      responses:
        200:
          description: The fountain with the given id was succefully deleted
        404:
          description: The fountain with the given id was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "NOT_FOUND_ERROR"
                message: "The entity with the given id (1) was not found"
                issues: []

  /subscribe:
    post:
      tags:
        - notification-service
      description: Subscribe to a queue of events
      requestBody:
        description: Subscription details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - event
              properties:
                email:
                  type: string
                event:
                  type: string
              example:
                email: example@test.com
                event: fountain_added_events
      responses:
        200:
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
              example:
                message: subscription created
        201:
          description: Subscription already exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
              example:
                message: subscription already exist
        400:
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "VALIDATION_ERROR"
                message: "There was an error during the validation of the request"
                issues:
                  - "Param: email, error: Invalid value"
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      value:
                        type: string
                      msg:
                        type: string
                      param:
                        type: string
                      location:
                        type: string

                example:
                  error:
                    value: email
                    msg: invalid value
                    param: email
                    location: body

>>>>>>> e4e0343... Add rating-service APIs in documentation
  /unsubscribe:
    post:
      tags:
        - notification-service
      description: Unsubscribe from receive notifications of fontanelle
      requestBody:
        description: Unsubscription details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - event
              properties:
                email:
                  type: string
                event:
                  type: string
              example:
                email: example@test.com
                event: fountain_added_events
      responses:
        200:
          description: Subscription deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
              example:
                message: subscription deleted
        400:
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "VALIDATION_ERROR"
                message: "There was an error during the validation of the request"
                issues:
                  - "Param: email, error: Invalid value"
        404:
          description: Subscription doesn't found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "NOT_FOUND_ERROR"
                message: "Subscription doesn't found"
                issues: []
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: subscription doesn't found

  /fountains/{fountainId}/rating:
    parameters:
      - name: fountainId
        description: Fountain ID.
        in: path
        required: true
        schema:
          type: string
        example: 1
    get:
      tags:
        - rating-service
      description: Get average rating for given fountain.
      responses:
        200:
          description: The fountain's rating was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rating"
        404:
          description: The fountain with the given id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "NOT_FOUND_ERROR"
                message: "The entity with the given id (1) was not found"
                issues: []
    post:
      tags:
        - rating-service
      description: Add rating for given fountain.
      requestBody:
        description: The rating details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rating"
      responses:
        201:
          description: The rating was successfully added.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingResponse"
        400:
          description: The request is not valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "VALIDATION_ERROR"
                message: "There was an error during the validation of the request"
                issues:
                  - "The rating of the fountain must be present"
                  - "The rating of the fountain must between 0 and 5"

  /fountains/{fountainId}/rating/{ratingId}:
    parameters:
      - name: fountainId
        description: Fountain ID.
        in: path
        required: true
        schema:
          type: string
        example: 1
      - name: ratingId
        description: Rating ID.
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Rating"
    get:
      tags:
        - rating-service
      description: Get the given rating for given fountain.
      responses:
        200:
          description: The given rating was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingResponse"
        404:
          description: The rating with the given id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "NOT_FOUND_ERROR"
                message: "The entity with the given id (4) was not found"
                issues: []
    delete:
      tags:
        - rating-service
      description: Delete the rating with the given id.
      responses:
        200:
          description: The rating with the given id was succefully deleted.
        404:
          description: The rating with the given id was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                type: "NOT_FOUND_ERROR"
                message: "The entity with the given id (4) was not found"
                issues: []

components:
  schemas:
    ErrorResponse:
      type: object
      description: The payload returned when one or more errors occur
      properties:
        type:
          type: string
        message:
          type: string
        issues:
          type: array
          items:
            type: string
      example:
        type: VALIDATION_ERROR
        message: There was an error during the validation of the request
        issues:
          - The query parameters longitude and latitude must be both present or both absent

    FountainResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      example:
        id: 1
        name: Fontana Via Armando Diaz
        latitude: 345.91341
        longitude: 315.9123

    NotificationResponse:
      type: object
      properties:
        message:
          type: string
      example:
        message: Subscription created

    Rating:
      type: integer
      description: The data type used to rate a fountain.
      format: int32
      maximum: 5
      minimum: 0
      example: 4

    RatingResponse:
      type: object
      description: The payload returned when a rating is added for a given fountain.
      properties:
        id:
          type: string
          description: Rating's unique ID.
        value:
          $ref: '#/components/schemas/Rating'
      example:
        id: 1
        value: 4
